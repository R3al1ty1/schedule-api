import uvicorn

from fastapi import FastAPI
from fastapi.responses import ORJSONResponse
from contextlib import asynccontextmanager

from core.settings import settings
from fastapi.middleware.cors import CORSMiddleware

from api import router as api_router


@asynccontextmanager
async def lifespan(app: FastAPI):
    print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    yield
    print("üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è...")


app = FastAPI(
    default_response_class=ORJSONResponse,
    lifespan=lifespan,
    title="""–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¢–∞–≤—Ä–∏–¥–∞""",
    version="1.0.0"
)

# origins = [
#     "http://localhost:3000",
# ]

app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "https://web.telegram.org",  # –î–æ–º–µ–Ω Telegram Web App
        "*",  # –î–ª—è —Ç–µ—Å—Ç–æ–≤ –º–æ–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ, –Ω–æ –ø–æ—Ç–æ–º —É–±–µ—Ä–∏
    ],
    allow_credentials=True,
    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],  # –†–∞–∑—Ä–µ—à–∏ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    allow_headers=[
        "user-id",  # –Ø–≤–Ω–æ —Ä–∞–∑—Ä–µ—à–∏ —Ç–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        "accept",
        "content-type",
        "authorization",
        "cache-control",
    ],
)


app.include_router(
    api_router,
    prefix="/api"
)


if __name__=="__main__":
    uvicorn.run(
        "main:app",
        host=settings.run.host,
        port=settings.run.port,
        reload=True
    )
